<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"mono patch"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
local _def = syntaxcheck and SCdefMonoFunction or defMonoFunction
return (
  _def("_Mono_Method1", "","Mono","Method1") .. "\n" ..
  _def("_Mono_Method2", "","Mono","Method2","int,int,int")
)
{$asm}
alloc(mono_patch_alloc,1024,_Mono_Method1)
label(mono_patch_backup)
label(mono_patch_code)
label(mono_patch_return)

mono_patch_alloc:
mono_patch_code:
  mov eax, ecx
mono_patch_backup:
  readmem(_Mono_Method1,6) // hook inst
  jmp mono_patch_return

_Mono_Method1:
  jmp mono_patch_code  // near jump cost size 5
  nop 1  // pad
mono_patch_return:

registersymbol(_Mono_Method1,mono_patch_alloc,mono_patch_backup)
 
 
[DISABLE]
_Mono_Method1:
  readmem(mono_patch_backup,6)

dealloc(mono_patch_alloc)
unregistersymbol(_Mono_Method1,mono_patch_alloc,mono_patch_backup)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>114070</ID>
      <Description>"asm patch"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
local defs = [[
define(AsmPatch_at,%x)
]]
if syntaxcheck then
  return defs:format(0)
else
  return defs:format(
    aobScanModule("AsmPatch_at","ProcessName.exe","48 ? ? ? 48 ? ? ? ? ? ? 48 ? ? ? ? ? ? 44 ? ? 0f 29 70 ? 48 ? ? 48")
  )
end
{$asm}
alloc(AsmPatch_alloc,$1000)
label(AsmPatch_code)
label(AsmPatch_return)
label(AsmPatch_vals)
label(AsmPatch_backup)

AsmPatch_alloc:
AsmPatch_vals:
  dq (int)10
AsmPatch_code:
  imul edx, [AsmPatch_vals]
AsmPatch_backup:
  readmem(AsmPatch_at,18)
  jmp AsmPatch_return

AsmPatch_at:
  db ff 25 00 00 00 00 // far jmp cost 14
  dq AsmPatch_code
  nop 4
AsmPatch_return:
registersymbol(AsmPatch_at,AsmPatch_alloc,AsmPatch_backup,AsmPatch_vals)

[DISABLE]

AsmPatch_at:
  readmem(AsmPatch_backup,18)

dealloc(AsmPatch_alloc)
unregistersymbol(AsmPatch_at,AsmPatch_alloc,AsmPatch_backup,AsmPatch_vals)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Init"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
[ENABLE]
nyce = require('ny_ce_utils')

local function main()
  nyce.addCompactMenu()
  nyce.autoAttach('AutoRogue.exe')
end

if syntaxcheck then return end
main()


[DISABLE]




</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>package.loaded

</LuaScript>
</CheatTable>
